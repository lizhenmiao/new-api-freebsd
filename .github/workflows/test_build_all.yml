name: Stable Tag Builder

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Enable test mode'
        required: false
        default: 'false'
      test_tags:
        description: 'Comma-separated tags (e.g. v1.0.0,v1.0.1)'
        required: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup.outputs.matrix }}
      has_tags: ${{ steps.setup.outputs.has_tags }}
    steps:
    - name: Validate test inputs
      id: validate
      if: ${{ inputs.test_mode == 'true' }}
      run: |
        if [ -z "${{ inputs.test_tags }}" ]; then
          echo "::error::Test mode requires 'test_tags' input"
          exit 1
        fi
        echo "TEST_TAGS=${{ inputs.test_tags }}" >> $GITHUB_ENV

    - name: Get valid tags
      id: get-tags
      uses: actions/github-script@v7
      env:
        UPSTREAM_TOKEN: ${{ secrets.UPSTREAM_TOKEN }}
      with:
        script: |
          const isTestMode = '${{ inputs.test_mode }}' === 'true';

          // 增强输入处理
          const inputTags = process.env.TEST_TAGS
            ? process.env.TEST_TAGS.split(',').map(t => t.trim()).filter(Boolean)
            : [];

          // 带认证的API请求
          const octokit = github.getOctokit(process.env.UPSTREAM_TOKEN)

          // 获取上游标签
          const { data: upstreamTags } = await octokit.paginate(
            octokit.rest.repos.listTags, {
              owner: 'Calcium-Ion',
              repo: 'new-api',
              per_page: 100
            }
          );

          // 获取现有发布
          const { data: existingReleases } = await octokit.paginate(
            octokit.rest.repos.listReleases, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            }
          );

          // 调试输出
          console.log('Upstream tags:', upstreamTags.map(t => t.name));
          console.log('Existing releases:', existingReleases.map(r => r.tag_name));

          // 处理有效标签
          const validTags = isTestMode
            ? inputTags.filter(t => upstreamTags.some(ut => ut.name === t))
            : upstreamTags.map(t => t.name);

          const missingTags = validTags.filter(t =>
            !existingReleases.some(r => r.tag_name === t)
          );

          console.log('Missing tags:', missingTags);
          core.setOutput('result', missingTags)
          core.setOutput('has_tags', missingTags.length > 0 ? 'true' : 'false')

    - name: Generate build matrix
      id: setup
      run: |
        # 处理空值情况
        HAS_TAGS=${{ steps.get-tags.outputs.has_tags || 'false' }}
        TAGS=${{ steps.get-tags.outputs.result || '[]' }}

        if [ "$HAS_TAGS" = "true" ]; then
          matrix_json=$(echo "$TAGS" | jq -c '{include: map({tag: .})}')
        else
          matrix_json='{"include":[]}'
        fi

        echo "matrix=${matrix_json}" >> $GITHUB_OUTPUT
        echo "has_tags=${HAS_TAGS}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    if: ${{ needs.prepare.outputs.has_tags == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
      max-parallel: 5
      fail-fast: false

    steps:
    - name: Clone repository
      run: |
        echo "Building tag: ${{ matrix.tag }}"
        git clone -b "${{ matrix.tag }}" --depth 1 \
          https://github.com/Calcium-Ion/new-api

    - name: Build Frontend
      working-directory: new-api/web
      run: |
        npm ci --no-audit --prefer-offline
        REACT_APP_VERSION="${{ matrix.tag }}" npm run build

    - name: Build Backend
      uses: vmactions/freebsd-vm@v1
      with:
        usesh: true
        release: 13.2
        prepare: |
          pkg install -y jq wget curl git gcc bash gawk gsed
          wget -q https://dl.google.com/go/go1.23.4.freebsd-amd64.tar.gz
          tar -C /usr/local -xzf go1.23.4.freebsd-amd64.tar.gz
          ln -s /usr/local/go/bin/go /usr/local/bin/go
        run: |
          cd new-api
          go mod download
          go build -ldflags "-s -w -X 'one-api/common.Version=${{ matrix.tag }}' -extldflags '-static'" -o new-api

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ matrix.tag }}
        files: new-api/new-api