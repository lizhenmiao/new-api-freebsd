name: Build Historical Versions

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-historical-build]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter-tags.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get existing releases
        id: get-releases
        run: |
          RELEASES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[].tag_name')
          echo "releases=$RELEASES" >> $GITHUB_OUTPUT

      - name: Filter new tags
        id: filter-tags
        run: |
          git fetch --tags
          ALL_TAGS=$(git tag -l "v0.*" --sort=-v:refname)
          FILTERED_TAGS=$(comm -23 <(echo "$ALL_TAGS" | sort) <(echo "${{ steps.get-releases.outputs.releases }}" | sort))
          echo "matrix=$(echo $FILTERED_TAGS | jq -R -s -c 'split(" ")')" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    name: Build ${{ matrix.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.tag }}

      - name: Setup build environment
        run: mkdir -p build/${{ matrix.tag }}

      - name: Build Frontend
        env:
          CI: ""
        run: |
          cd web
          git describe --tags > VERSION
          REACT_APP_VERSION=$(git describe --tags) ./build.sh
          mv build ../build/${{ matrix.tag }}/web
          cd ..

      - name: Build Backend
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 13.2
          prepare: |
            pkg install -y wget curl git gcc bash gawk gsed
            wget https://dl.google.com/go/go1.22.0.freebsd-amd64.tar.gz
            tar -C /usr/local -xzf go1.22.0.freebsd-amd64.tar.gz
            ln -s /usr/local/go/bin/go /usr/local/bin/go
          env:
            TAG: ${{ matrix.tag }}
          run: |
            go mod download
            go build -ldflags "-s -w -X 'github.com/Calcium-Ion/new-api/common.Version=$TAG' -extldflags '-static'" -o build/$TAG/one-api

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.tag }}
          files: |
            build/${{ matrix.tag }}/*