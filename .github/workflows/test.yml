name: Batch Build Tags

on:
  workflow_dispatch:
    inputs:
      test-mode:
        description: 'Test mode (build first N tags)'
        required: false
        default: '0'
        type: string

jobs:
  fetch-tags:
    runs-on: ubuntu-latest
    outputs:
      tag_list: ${{ steps.get-tags.outputs.tag_list }}
    steps:
      - name: Get all upstream tags
        uses: actions/github-script@v7
        id: get-tags
        with:
          script: |
            const upstreamTags = await github.paginate(
              github.rest.repos.listTags,
              {
                owner: 'Calcium-Ion',
                repo: 'new-api',
                per_page: 100
              }
            )

            const currentReleases = await github.paginate(
              github.rest.repos.listReleases,
              {
                owner: context.repo.owner,
                repo: context.repo.repo
              }
            )

            const existingTags = new Set((currentReleases || []).map(r => r.tag_name))
            const newTags = upstreamTags
              .filter(t => !existingTags.has(t.name))
              .sort((a, b) => new Date(a.commit.commit.author.date) - new Date(b.commit.commit.author.date))
              .map(t => t.name)

            const testCount = parseInt('${{ inputs.test-mode }}') || 0
            if (testCount > 0) {
              newTags = newTags.slice(0, testCount)
            }

            core.setOutput('tag_list', JSON.stringify(newTags))

  build:
    needs: fetch-tags
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        tag: ${{ fromJSON(needs.fetch-tags.outputs.tag_list) }}
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Prepare workspace
        run: |
          mkdir -p builds/${{ matrix.tag }}
          cd builds/${{ matrix.tag }}
          git clone -b ${{ matrix.tag }} --depth 1 https://github.com/Calcium-Ion/new-api

      - name: Build Frontend
        env:
          CI: ""
        run: |
          cd builds/${{ matrix.tag }}/new-api/web
          npm install --prefer-offline --no-audit
          REACT_APP_VERSION=${{ matrix.tag }} npm run build
          cd ../../../..

      - name: Build Backend (FreeBSD)
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 13.2
          prepare: |
            # 只安装一次依赖
            if [ ! -f /usr/local/bin/go ]; then
              pkg install -y jq wget curl git gcc bash gawk gsed
              wget https://dl.google.com/go/go1.23.4.freebsd-amd64.tar.gz
              tar -C /usr/local -xzf go1.23.4.freebsd-amd64.tar.gz
              rm go1.23.4.freebsd-amd64.tar.gz
              ln -s /usr/local/go/bin/go /usr/local/bin/go
            fi
          run: |
            cd builds/${{ matrix.tag }}/new-api
            go mod download
            go build -ldflags "-s -w -X 'one-api/common.Version=${{ matrix.tag }}' -extldflags '-static'" -o new-api

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: new-api-${{ matrix.tag }}
          path: builds/${{ matrix.tag }}/new-api/new-api

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.tag }}
          prerelease: true
          files: builds/${{ matrix.tag }}/new-api/new-api
