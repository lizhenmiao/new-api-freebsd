name: Auto Build Latest Tag

on:
  schedule:
    - cron: '0 19 * * *' # UTC 19:00 (北京时间 03:00)
  workflow_dispatch:

jobs:
  check-latest:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.get_latest.outputs.LATEST_TAG }}
      CURRENT_TAG: ${{ steps.get_current.outputs.CURRENT_TAG }}
    steps:
      - name: Get Latest Tag
        id: get_latest
        run: |
          LATEST_TAG=$(wget -qO- https://api.github.com/repos/Calcium-Ion/new-api/tags | grep -oP '"name": "\Kv[\d.]+' | head -1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Get Current Release
        id: get_current
        run: |
          RESPONSE=$(wget -qO- https://api.github.com/repos/${{ github.repository }}/releases/latest || echo "{}")
          if [[ "$RESPONSE" == *"tag_name"* ]]; then
            CURRENT_TAG=$(echo "$RESPONSE" | grep -oP '"tag_name": "\K[^"]+')
          else
            CURRENT_TAG="v0.0.0"
          fi
          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check-latest
    if: needs.check-latest.outputs.LATEST_TAG != needs.check-latest.outputs.CURRENT_TAG
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Clone Repo
        run: |
          git clone -b ${{ needs.check-latest.outputs.LATEST_TAG }} https://github.com/Calcium-Ion/new-api

      - name: Build Frontend
        env:
          CI: ""
        run: |
          cd new-api/web
          npm install
          REACT_APP_VERSION=${{ needs.check-latest.outputs.LATEST_TAG }} npm run build
          cd ../..

      - name: Build Backend
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 13.2
          prepare: |
            pkg install -y jq wget curl git gcc bash gawk gsed
            wget https://dl.google.com/go/go1.23.4.freebsd-amd64.tar.gz
            tar -C /usr/local -xzf go1.23.4.freebsd-amd64.tar.gz
            rm go1.23.4.freebsd-amd64.tar.gz
            ln -s /usr/local/go/bin/go /usr/local/bin/go
          run: |
            git config --global --add safe.directory /home/runner/work/new-api-freebsd/new-api-freebsd/new-api
            cd new-api
            go mod download
            go build -ldflags "-s -w -X 'one-api/common.Version=${{ needs.check-latest.outputs.LATEST_TAG }}' -extldflags '-static'" -o new-api

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: new-api-freebsd
          path: new-api/new-api

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check-latest.outputs.LATEST_TAG }}
          files: new-api/new-api
