name: Auto Build Latest Tag

on:
  schedule:
    - cron: '0 19 * * *'  # UTC 19:00 (北京时间 03:00)
  workflow_dispatch:

jobs:
  check-latest:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.compare.outputs.LATEST_TAG }}
      CURRENT_TAG: ${{ steps.compare.outputs.CURRENT_TAG }}
    steps:
      - name: Fetch tags
        uses: actions/github-script@v7
        id: fetch-tags
        with:
          script: |
            const { data: upstream } = await github.rest.repos.listTags({
              owner: 'Calcium-Ion',
              repo: 'new-api'
            })

            const current = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            }).catch(() => ({ data: { tag_name: 'v0.0.0' } }))

            return {
              latest: upstream[0]?.name || 'v0.0.0',
              current: current.data.tag_name
            }

      - name: Compare versions
        id: compare
        run: |
          echo "LATEST_TAG=${{ steps.fetch-tags.outputs.result.latest }}" >> $GITHUB_OUTPUT
          echo "CURRENT_TAG=${{ steps.fetch-tags.outputs.result.current }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check-latest
    if: needs.check-latest.outputs.LATEST_TAG != needs.check-latest.outputs.CURRENT_TAG
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Clone Repo
        run: |
          git clone -b ${{ needs.check-latest.outputs.LATEST_TAG }} https://github.com/Calcium-Ion/new-api

      - name: Build Frontend
        env:
          CI: ""
        run: |
          cd new-api/web
          npm install
          REACT_APP_VERSION=${{ needs.check-latest.outputs.LATEST_TAG }} npm run build
          cd ../..

      - name: Build Backend
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 13.2
          prepare: |
            pkg install -y jq wget curl git gcc bash gawk gsed
            wget https://dl.google.com/go/go1.23.4.freebsd-amd64.tar.gz
            tar -C /usr/local -xzf go1.23.4.freebsd-amd64.tar.gz
            rm go1.23.4.freebsd-amd64.tar.gz
            ln -s /usr/local/go/bin/go /usr/local/bin/go
          run: |
            git config --global --add safe.directory /home/runner/work/new-api-freebsd/new-api-freebsd/new-api
            cd new-api
            go mod download
            go build -ldflags "-s -w -X 'one-api/common.Version=${{ needs.check-latest.outputs.LATEST_TAG }}' -extldflags '-static'" -o new-api

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: new-api-freebsd
          path: new-api/new-api

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check-latest.outputs.LATEST_TAG }}
          files: new-api/new-api