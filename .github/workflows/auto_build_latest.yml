name: Auto Build Latest Tag

on:
  schedule:
    - cron: '0 19 * * *'  # UTC 19:00 (北京时间 03:00)
  workflow_dispatch:

jobs:
  check-latest:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.get_latest.outputs.LATEST_TAG }}
      CURRENT_TAG: ${{ steps.get_current.outputs.CURRENT_TAG }}
      NEED_BUILD: ${{ steps.check-need-build.outputs.NEED_BUILD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Latest Tag
        id: get_latest
        run: |
          # 使用更可靠的 jq 解析 JSON
          LATEST_TAG=$(curl -s https://api.github.com/repos/Calcium-Ion/new-api/tags | jq -r '.[0].name')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Get Current Release
        id: get_current
        run: |
          # 使用 GitHub CLI 获取更可靠的结果
          if TAG=$(gh release view --json tagName --jq '.tagName' 2>/dev/null); then
            CURRENT_TAG=$TAG
          else
            CURRENT_TAG="v0.0.0"
          fi
          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_OUTPUT

      - name: Check build requirement
        id: check-need-build
        run: |
          if [[ "${{ steps.get_latest.outputs.LATEST_TAG }}" != "${{ steps.get_current.outputs.CURRENT_TAG }}" ]]; then
            echo "NEED_BUILD=true" >> $GITHUB_OUTPUT
          else
            echo "NEED_BUILD=false" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-latest
    if: needs.check-latest.outputs.NEED_BUILD == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.check-latest.outputs.LATEST_TAG }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Build Frontend
        working-directory: web
        env:
          CI: false
          REACT_APP_VERSION: ${{ needs.check-latest.outputs.LATEST_TAG }}
        run: |
          npm ci
          npm run build

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Build Backend
        run: |
          # 使用跨平台编译代替 FreeBSD 虚拟机
          GOOS=freebsd GOARCH=amd64 \
          go build -ldflags "-s -w -X 'one-api/common.Version=${{ needs.check-latest.outputs.LATEST_TAG }}' -extldflags '-static'" \
          -o new-api-freebsd

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: new-api-freebsd
          path: new-api-freebsd

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check-latest.outputs.LATEST_TAG }}
          files: new-api-freebsd
