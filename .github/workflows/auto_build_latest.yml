name: Optimized Auto Build Latest Tag

on:
  schedule:
    - cron: '0 19 * * *'  # UTC 19:00 (北京时间 03:00)
  workflow_dispatch:

jobs:
  check-latest:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.fetch-tags.outputs.latest }}
      CURRENT_TAG: ${{ steps.fetch-tags.outputs.current }}
    steps:
      - name: Fetch tags and releases
        uses: actions/github-script@v7
        id: fetch-tags
        with:
          script: |
            try {
              // 获取上游最新标签
              const upstreamTags = await github.rest.repos.listTags({
                owner: 'Calcium-Ion',
                repo: 'new-api',
                per_page: 1
              })

              // 获取当前仓库最新发布
              const currentRelease = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo
              }).catch(() => ({ data: { tag_name: 'v0.0.0' } }))

              const latestTag = upstreamTags.data[0]?.name || 'v0.0.0'
              const currentTag = currentRelease.data.tag_name

              core.setOutput('latest', latestTag)
              core.setOutput('current', currentTag)

              console.log(`Latest upstream tag: ${latestTag}`)
              console.log(`Current release tag: ${currentTag}`)
            } catch (error) {
              core.setOutput('latest', 'v0.0.0')
              core.setOutput('current', 'v0.0.0')
              core.setFailed(`Error fetching tags: ${error.message}`)
            }

  build:
    runs-on: ubuntu-latest
    needs: check-latest
    if: needs.check-latest.outputs.LATEST_TAG != needs.check-latest.outputs.CURRENT_TAG
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js with caching
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Clone target repository
        run: |
          git clone --depth 1 --branch "${{ needs.check-latest.outputs.LATEST_TAG }}" \
            https://github.com/Calcium-Ion/new-api

      - name: Build Frontend
        working-directory: new-api/web
        env:
          CI: false
          REACT_APP_VERSION: ${{ needs.check-latest.outputs.LATEST_TAG }}
        run: |
          npm ci --prefer-offline --no-audit
          npm run build

      - name: Build Backend (FreeBSD)
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 13.2
          prepare: |
            # 优化依赖安装顺序
            pkg update -f
            pkg install -y git gcc gawk gsed bash go123
            ln -s /usr/local/bin/go /usr/local/bin/go
          run: |
            cd new-api
            go mod download -x
            CGO_ENABLED=0 go build \
              -trimpath \
              -ldflags "-s -w -X 'one-api/common.Version=${{ needs.check-latest.outputs.LATEST_TAG }}'" \
              -o new-api

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: new-api-freebsd
          path: new-api/new-api
          retention-days: 3

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check-latest.outputs.LATEST_TAG }}
          files: new-api/new-api
          generate_release_notes: true