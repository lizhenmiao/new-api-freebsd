name: Auto Build Latest Tag

on:
  schedule:
    - cron: '0 19 * * *' # 每天 UTC 19:00，即北京时间 03:00
  workflow_dispatch:

jobs:
  check-latest:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.set_latest_tag.outputs.LATEST_TAG }}
      CURRENT_TAG: ${{ steps.set_current_tag.outputs.CURRENT_TAG }}
    steps:
      - name: Get Latest Tag from New API
        id: get_latest_tag
        run: |
          LATEST_TAG=$(wget -qO- https://api.github.com/repos/Calcium-Ion/new-api/tags | gawk -F '\"' '/name/{print $4;exit}')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Set Latest Tag Output
        id: set_latest_tag
        run: |
          echo "::set-output name=LATEST_TAG::${{ env.LATEST_TAG }}"
          echo "LATEST_TAG=${{ env.LATEST_TAG }}" >> $GITHUB_ENV

      - name: Get Latest Tag Built in Current Repo
        id: get_current_tag
        run: |
          CURRENT_TAG=$(wget -qO- https://api.github.com/repos/${{ github.repository }}/releases/latest | gawk -F '\"' '/tag_name/{print $4;exit}')
          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV

      - name: Set Current Tag Output
        id: set_current_tag
        run: |
          echo "::set-output name=CURRENT_TAG::${{ env.CURRENT_TAG }}"
          echo "CURRENT_TAG=${{ env.CURRENT_TAG }}" >> $GITHUB_ENV

      - name: Compare Tags
        if: env.LATEST_TAG != env.CURRENT_TAG
        run: |
          echo "Need to build the tag: ${{ env.LATEST_TAG }}"

  build:
    runs-on: ubuntu-latest
    needs: check-latest
    if: needs.check-latest.outputs.LATEST_TAG != needs.check-latest.outputs.CURRENT_TAG
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Clone Repo
      run: |
        git clone -b ${{ needs.check-latest.outputs.LATEST_TAG }} https://github.com/Calcium-Ion/new-api

    - name: Build Project on FreeBSD
      uses: vmactions/freebsd-vm@v1
      with:
        usesh: true
        release: 13.2
        prepare: |
          pkg install -y wget curl git gcc bash gawk gsed
          wget https://dl.google.com/go/go1.22.0.freebsd-amd64.tar.gz && tar -C /usr/local -xzf go1.22.0.freebsd-amd64.tar.gz && rm go1.22.0.freebsd-amd64.tar.gz
          ln -s /usr/local/go/bin/go /usr/local/bin/go
        run: |
          cd new-api
          go mod download
          go build -ldflags "-s -w -X 'github.com/Calcium-Ion/new-api/common.Version=${{ needs.check-latest.outputs.LATEST_TAG }}' -extldflags '-static'" -o new-api

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: new-api
        path: |
          new-api

    - name: Create release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.check-latest.outputs.LATEST_TAG }}
        files: new-api